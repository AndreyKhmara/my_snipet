Правила работы с GitHub
В первый день (обязательно!)
Чтобы настроить свою учетную запись GitHub для работы, тебе в первую очередь необходимо сделать следующие шаги:

Перейди к изображению в правом верхнем углу страницы GitHub и открой раскрывающееся меню.
Выбери Settings (Настройки) из выпадающего списка.
В поле Name (Имя) укажи свои имя и фамилию.
Справа от поля с именем добавь фотографию, по которой тебя можно идентифицировать.
На левой навигационной панели в разделе Emails добавь основной адрес электронной почты (при ее отсутствии или регистрации GitHub - аккаунта на другой электронный адрес).
Во время групповой работы
После того, как один человек из группы сделал fork репозитория с заданием к себе, ему необходимо добавить в настройках остальных участников команды (Settings -> Collaborators & teams). Ему также необходимо произвести первичную инициализацию проекта (например, создать .gitignore и прописать зависимости в package.json). После первичной инициализации этот член группы делает initial commit и загружает всё на основную ветку master:

$ git add -A
$ git commit -m "initial commit"
$ git push origin master
Склонируй репозиторий с сервера GitHub к себе на локальный компьютер по SSH-ссылке.

$ git clone <project_link>
Например:

$ git clone git@github.com:Elbrus-Bootcamp/core-algorithm-word-search.git
Находясь в ветке master, создай ветку по названию задачи

$ git checkout -b styles
Во время работы с конкретной задачей (и конкретной веткой) почаще делай commit

$ git add -A
$ git commit -m "create main container"
Следующие шаги постарайтесь не делать одновременно всей командой!

Когда твоя задача будет выполнена, или группе необходимо объединить кусочки проекта, вначале переключись на master и обнови его

$ git checkout master
$ git pull origin master
Вернись к себе в локальную ветку и выполни слияние в нее обновленной ветки master

$ git checkout styles
$ git merge master
При наличии конфликтов мержа, устрани их в коде и сделай коммит

$ git commit -m "merge master into styles"
Запушь свою обновлённую ветку на сервер GitHub

$ git push origin styles
Зайди на GitHub, во вкладке branch зайди в свою ветку и создай pull request в ветку master

Убедись, что нет конфликтов и возможен автоматический мерж. Если конфликты есть - повтори шаги 6-9.

Попроси другого человека из своей команды посмотреть пул реквест.

Другой человек смотрит пул реквест. Если есть вопросы-комментарии-замечания - пишет их в веб-интерфейсе, ты - отвечаешь, правишь. Новый пул реквест создавать при этом не надо - всё само обновится. Когда проверяющему всё нравится, то он нажимает на кнопку merge и твои изменения попадают в master.

Далее шаги с 5 по 11 делает каждый следующий участник команды (при необходимости).

Начинай новую задачу - вернись к шагу 3, предварительно обновив локальную ветку master
$ git checkout master
$ git pull origin master
